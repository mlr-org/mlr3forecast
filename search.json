[{"path":"https://mlr3forecast.mlr-org.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maximilian Mücke. Author, maintainer.","code":""},{"path":"https://mlr3forecast.mlr-org.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mücke M (2025). mlr3forecast: Extending 'mlr3' Time Series Forecasting. R package version 0.0.1.","code":"@Manual{,   title = {mlr3forecast: Extending 'mlr3' to Time Series Forecasting},   author = {Maximilian Mücke},   year = {2025},   note = {R package version 0.0.1}, }"},{"path":"https://mlr3forecast.mlr-org.com/index.html","id":"mlr3forecast","dir":"","previous_headings":"","what":"Extending mlr3 to Time Series Forecasting","title":"Extending mlr3 to Time Series Forecasting","text":"Extending mlr3 time series forecasting. [!IMPORTANT] package early stage development considered experimental. interested experimenting , welcome feedback!","code":""},{"path":"https://mlr3forecast.mlr-org.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extending mlr3 to Time Series Forecasting","text":"Install development version GitHub:","code":"# install.packages(\"pak\") pak::pak(\"mlr-org/mlr3forecast\")"},{"path":"https://mlr3forecast.mlr-org.com/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Extending mlr3 to Time Series Forecasting","text":"goal mlr3forecast extend mlr3 time series forecasting. achieved introducing new classes methods forecasting tasks, learners, resamplers. now forecasting task learner restricted time series regression tasks, might extended classification tasks future. two goals, one support traditional forecasting learners support support machine learning forecasting, .e. using regression learners applying forecasting tasks. design latter still flux may change.","code":""},{"path":"https://mlr3forecast.mlr-org.com/index.html","id":"example-native-forecast-learner","dir":"","previous_headings":"Usage","what":"Example: native forecast learner","title":"Extending mlr3 to Time Series Forecasting","text":"First lets create helper function generate new data forecasting tasks. Currently, support native forecasting learners forecast package. future, plan support forecasting learners.","code":"library(mlr3forecast) #> Loading required package: mlr3  generate_newdata = function(task, n = 1L, resolution = \"day\") {   assert_count(n)   assert_string(resolution)   assert_choice(     resolution, c(\"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\")   )    order_cols = task$col_roles$order   max_index = max(task$data(cols = order_cols)[[1L]])    unit = switch(resolution,     second = \"sec\",     minute = \"min\",     hour = ,     day = ,     week = ,     month = ,     quarter = ,     year = identity(resolution),     stopf(\"Invalid resolution\")   )   unit = sprintf(\"1 %s\", unit)   index = seq(max_index, length.out = n + 1L, by = unit)   index = index[2:length(index)]    newdata = data.frame(index = index, target = rep(NA_real_, n), check.names = FALSE)   setNames(newdata, c(order_cols, task$target_names)) }  task = tsk(\"airpassengers\") newdata = generate_newdata(task, 12L, \"month\") newdata #>          date passengers #> 1  1961-01-01         NA #> 2  1961-02-01         NA #> 3  1961-03-01         NA #> 4  1961-04-01         NA #> 5  1961-05-01         NA #> 6  1961-06-01         NA #> 7  1961-07-01         NA #> 8  1961-08-01         NA #> 9  1961-09-01         NA #> 10 1961-10-01         NA #> 11 1961-11-01         NA #> 12 1961-12-01         NA task = tsk(\"airpassengers\") learner = lrn(\"fcst.auto_arima\")$train(task) #> Registered S3 method overwritten by 'quantmod': #>   method            from #>   as.zoo.data.frame zoo prediction = learner$predict(task, 140:144) prediction$score(msr(\"regr.rmse\")) #> regr.rmse  #>  39.62379 newdata = generate_newdata(task, 12L, \"month\") learner$predict_newdata(newdata, task) #> <PredictionRegr> for 12 observations: #>  row_ids truth response #>        1    NA 483.3799 #>        2    NA 490.9993 #>        3    NA 520.2773 #>      ---   ---      --- #>       10    NA 500.2729 #>       11    NA 507.3034 #>       12    NA 512.9829  # works with quantile response learner = lrn(\"fcst.auto_arima\",   predict_type = \"quantiles\",   quantiles = c(0.1, 0.15, 0.5, 0.85, 0.9),   quantile_response = 0.5 )$train(task) learner$predict_newdata(newdata, task) #> <PredictionRegr> for 12 observations: #>  row_ids truth     q0.1    q0.15     q0.5    q0.85     q0.9 response #>        1    NA 449.3201 455.8346 483.3799 510.9252 517.4397 483.3799 #>        2    NA 439.6752 449.4918 490.9993 532.5069 542.3235 490.9993 #>        3    NA 464.0693 474.8200 520.2773 565.7347 576.4854 520.2773 #>      ---   ---      ---      ---      ---      ---      ---      --- #>       10    NA 440.1583 451.6562 500.2729 548.8896 560.3875 500.2729 #>       11    NA 446.7823 458.3580 507.3034 556.2489 567.8246 507.3034 #>       12    NA 452.1168 463.7584 512.9829 562.2074 573.8491 512.9829"},{"path":"https://mlr3forecast.mlr-org.com/index.html","id":"machine-learning-forecasting","dir":"","previous_headings":"Usage","what":"machine learning forecasting","title":"Extending mlr3 to Time Series Forecasting","text":"","code":"library(mlr3learners)  task = tsk(\"airpassengers\") task$select(setdiff(task$feature_names, \"date\")) flrn = ForecastLearner$new(lrn(\"regr.ranger\"), 1:12)$train(task) newdata = data.frame(passengers = rep(NA_real_, 3L)) prediction = flrn$predict_newdata(newdata, task) prediction #> <PredictionRegr> for 3 observations: #>  row_ids truth response #>        1    NA 433.7011 #>        2    NA 431.2296 #>        3    NA 452.5381 prediction = flrn$predict(task, 142:144) prediction #> <PredictionRegr> for 3 observations: #>  row_ids truth response #>        1   461 456.7375 #>        2   390 412.8622 #>        3   432 430.5879 prediction$score(msr(\"regr.rmse\")) #> regr.rmse  #>  13.45168  flrn = ForecastLearner$new(lrn(\"regr.ranger\"), 1:12) resampling = rsmp(\"forecast_holdout\", ratio = 0.9) rr = resample(task, flrn, resampling) rr$aggregate(msr(\"regr.rmse\")) #> regr.rmse  #>  47.85272  resampling = rsmp(\"forecast_cv\") rr = resample(task, flrn, resampling) rr$aggregate(msr(\"regr.rmse\")) #> regr.rmse  #>    25.117"},{"path":"https://mlr3forecast.mlr-org.com/index.html","id":"multivariate","dir":"","previous_headings":"Usage","what":"Multivariate","title":"Extending mlr3 to Time Series Forecasting","text":"","code":"library(mlr3pipelines)  task = tsk(\"airpassengers\") # datefeatures currently requires POSIXct graph = ppl(\"convert_types\", \"Date\", \"POSIXct\") %>>%   po(\"datefeatures\",     param_vals = list(is_day = FALSE, hour = FALSE, minute = FALSE, second = FALSE)   ) new_task = graph$train(task)[[1L]] flrn = ForecastLearner$new(lrn(\"regr.ranger\"), 1:12)$train(new_task) prediction = flrn$predict(new_task, 142:144) prediction$score(msr(\"regr.rmse\")) #> regr.rmse  #>  14.46367  row_ids = new_task$nrow - 0:2 flrn$predict_newdata(new_task$data(rows = row_ids), new_task) #> <PredictionRegr> for 3 observations: #>  row_ids truth response #>        1   432 437.1584 #>        2   390 435.8279 #>        3   461 461.5812 newdata = new_task$data(rows = row_ids, cols = new_task$feature_names) flrn$predict_newdata(newdata, new_task) #> <PredictionRegr> for 3 observations: #>  row_ids truth response #>        1    NA 437.1584 #>        2    NA 435.8279 #>        3    NA 461.5812  resampling = rsmp(\"forecast_holdout\", ratio = 0.9) rr = resample(new_task, flrn, resampling) rr$aggregate(msr(\"regr.rmse\")) #> regr.rmse  #>  49.07941  resampling = rsmp(\"forecast_cv\") rr = resample(new_task, flrn, resampling) rr$aggregate(msr(\"regr.rmse\")) #> regr.rmse  #>  26.81219"},{"path":"https://mlr3forecast.mlr-org.com/index.html","id":"mlr3pipelines-integration","dir":"","previous_headings":"Usage","what":"mlr3pipelines integration","title":"Extending mlr3 to Time Series Forecasting","text":"","code":"graph = ppl(\"convert_types\", \"Date\", \"POSIXct\") %>>%   po(\"datefeatures\",     param_vals = list(is_day = FALSE, hour = FALSE, minute = FALSE, second = FALSE)   ) flrn = ForecastLearner$new(lrn(\"regr.ranger\"), 1:12) glrn = as_learner(graph %>>% flrn)$train(task) prediction = glrn$predict(task, 142:144) prediction$score(msr(\"regr.rmse\")) #> regr.rmse  #>  13.27248"},{"path":"https://mlr3forecast.mlr-org.com/index.html","id":"example-forecasting-electricity-demand","dir":"","previous_headings":"Usage","what":"Example: Forecasting electricity demand","title":"Extending mlr3 to Time Series Forecasting","text":"","code":"library(mlr3learners) library(mlr3pipelines)  task = tsibbledata::vic_elec |>   as.data.table() |>   setnames(tolower) |>   _[     year(time) == 2014L,     .(       demand = sum(demand) / 1e3,       temperature = max(temperature),       holiday = any(holiday)     ),     by = date   ] |>   as_task_fcst(id = \"vic_elec\", target = \"demand\", order = \"date\")  graph = ppl(\"convert_types\", \"Date\", \"POSIXct\") %>>%   po(\"datefeatures\",     param_vals = list(       year = FALSE, is_day = FALSE, hour = FALSE, minute = FALSE, second = FALSE     )   ) flrn = ForecastLearner$new(lrn(\"regr.ranger\"), 1:3) glrn = as_learner(graph %>>% flrn)$train(task)  max_date = task$data()[.N, date] newdata = data.frame(   date = max_date + 1:14,   demand = rep(NA_real_, 14L),   temperature = 26,   holiday = c(TRUE, rep(FALSE, 13L)) ) prediction = glrn$predict_newdata(newdata, task) prediction #> <PredictionRegr> for 14 observations: #>  row_ids truth response #>        1    NA 186.6444 #>        2    NA 190.7973 #>        3    NA 184.0170 #>      ---   ---      --- #>       12    NA 214.6220 #>       13    NA 218.5850 #>       14    NA 220.2067"},{"path":"https://mlr3forecast.mlr-org.com/index.html","id":"global-forecasting","dir":"","previous_headings":"Usage","what":"Global Forecasting","title":"Extending mlr3 to Time Series Forecasting","text":"","code":"library(mlr3learners) library(mlr3pipelines) library(tsibble) # needs not be loaded for it to somehow work  task = tsibbledata::aus_livestock |>   as.data.table() |>   setnames(tolower) |>   _[, month := as.Date(month)] |>   _[, .(count = sum(count)), by = .(state, month)] |>   setorder(state, month) |>   as_task_fcst(id = \"aus_livestock\", target = \"count\", order = \"month\", key = \"state\")  graph = ppl(\"convert_types\", \"Date\", \"POSIXct\") %>>%   po(\"datefeatures\",     param_vals = list(       week_of_year = FALSE, day_of_week = FALSE, day_of_month = FALSE,       day_of_year = FALSE, is_day = FALSE, hour = FALSE, minute = FALSE,       second = FALSE     )   ) task = graph$train(task)[[1L]] task$col_roles$key = \"state\"  flrn = ForecastLearner$new(lrn(\"regr.ranger\"), 1:3)$train(task) prediction = flrn$predict(task, 4460:4464) prediction$score(msr(\"regr.rmse\")) #> regr.rmse  #>  22607.04  flrn = ForecastLearner$new(lrn(\"regr.ranger\"), 1:3) resampling = rsmp(\"forecast_holdout\", ratio = 0.9) rr = resample(task, flrn, resampling) rr$aggregate(msr(\"regr.rmse\")) #> regr.rmse  #>  91443.98"},{"path":"https://mlr3forecast.mlr-org.com/index.html","id":"example-global-vs-local-forecasting","dir":"","previous_headings":"Usage","what":"Example: Global vs Local Forecasting","title":"Extending mlr3 to Time Series Forecasting","text":"machine learning forecasting difference forecasting time series longitudinal data often refered local global forecasting.","code":"# TODO: find better task example, since the effect is minor here  graph = ppl(\"convert_types\", \"Date\", \"POSIXct\") %>>%   po(\"datefeatures\",     param_vals = list(       week_of_year = FALSE, day_of_week = FALSE, day_of_month = FALSE,       day_of_year = FALSE, is_day = FALSE, hour = FALSE, minute = FALSE,       second = FALSE     )   )  # local forecasting task = tsibbledata::aus_livestock |>   as.data.table() |>   setnames(tolower) |>   _[, month := as.Date(month)] |>   _[state == \"Western Australia\", .(count = sum(count)), by = .(month)] |>   setorder(month) |>   as_task_fcst(id = \"aus_livestock\", target = \"count\", order = \"month\") task = graph$train(task)[[1L]] flrn = ForecastLearner$new(lrn(\"regr.ranger\"), 1L)$train(task) tab = task$backend$data(   rows = task$row_ids, cols = c(task$backend$primary_key, \"month.year\") ) setnames(tab, c(\"row_id\", \"year\")) row_ids = tab[year >= 2015, row_id] prediction = flrn$predict(task, row_ids) prediction$score(msr(\"regr.rmse\")) #> regr.rmse  #>  31118.27  # global forecasting task = tsibbledata::aus_livestock |>   as.data.table() |>   setnames(tolower) |>   _[, month := as.Date(month)] |>   _[, .(count = sum(count)), by = .(state, month)] |>   setorder(state, month) |>   as_task_fcst(id = \"aus_livestock\", target = \"count\", order = \"month\", key = \"state\") task = graph$train(task)[[1L]] task$col_roles$key = \"state\" flrn = ForecastLearner$new(lrn(\"regr.ranger\"), 1L)$train(task) tab = task$backend$data(   rows = task$row_ids, cols = c(task$backend$primary_key, \"month.year\", \"state\") ) setnames(tab, c(\"row_id\", \"year\", \"state\")) row_ids = tab[year >= 2015 & state == \"Western Australia\", row_id] prediction = flrn$predict(task, row_ids) prediction$score(msr(\"regr.rmse\")) #> regr.rmse  #>  31580.54"},{"path":"https://mlr3forecast.mlr-org.com/index.html","id":"example-custom-pipeops","dir":"","previous_headings":"Usage","what":"Example: Custom PipeOps","title":"Extending mlr3 to Time Series Forecasting","text":"","code":"library(mlr3learners) library(mlr3pipelines)  task = tsk(\"airpassengers\") pop = po(\"fcst.lag\", lag = 1:12) new_task = pop$train(list(task))[[1L]] new_task$data() #>      passengers       date passengers_lag_1 passengers_lag_2 passengers_lag_3 #>   1:        112 1949-01-01               NA               NA               NA #>   2:        118 1949-02-01              112               NA               NA #>   3:        132 1949-03-01              118              112               NA #>   4:        129 1949-04-01              132              118              112 #>   5:        121 1949-05-01              129              132              118 #>  ---                                                                          #> 140:        606 1960-08-01              622              535              472 #> 141:        508 1960-09-01              606              622              535 #> 142:        461 1960-10-01              508              606              622 #> 143:        390 1960-11-01              461              508              606 #> 144:        432 1960-12-01              390              461              508 #>      passengers_lag_4 passengers_lag_5 passengers_lag_6 passengers_lag_7 #>   1:               NA               NA               NA               NA #>   2:               NA               NA               NA               NA #>   3:               NA               NA               NA               NA #>   4:               NA               NA               NA               NA #>   5:              112               NA               NA               NA #>  ---                                                                     #> 140:              461              419              391              417 #> 141:              472              461              419              391 #> 142:              535              472              461              419 #> 143:              622              535              472              461 #> 144:              606              622              535              472 #>      passengers_lag_8 passengers_lag_9 passengers_lag_10 passengers_lag_11 #>   1:               NA               NA                NA                NA #>   2:               NA               NA                NA                NA #>   3:               NA               NA                NA                NA #>   4:               NA               NA                NA                NA #>   5:               NA               NA                NA                NA #>  ---                                                                       #> 140:              405              362               407               463 #> 141:              417              405               362               407 #> 142:              391              417               405               362 #> 143:              419              391               417               405 #> 144:              461              419               391               417 #>      passengers_lag_12 #>   1:                NA #>   2:                NA #>   3:                NA #>   4:                NA #>   5:                NA #>  ---                   #> 140:               559 #> 141:               463 #> 142:               407 #> 143:               362 #> 144:               405  task = tsk(\"airpassengers\") graph = po(\"fcst.lag\", lag = 1:12) %>>%   ppl(\"convert_types\", \"Date\", \"POSIXct\") %>>%   po(\"datefeatures\",     param_vals = list(       week_of_year = FALSE, day_of_week = FALSE, day_of_month = FALSE,       day_of_year = FALSE, is_day = FALSE, hour = FALSE, minute = FALSE,       second = FALSE     )   ) flrn = ForecastRecursiveLearner$new(lrn(\"regr.ranger\")) glrn = as_learner(graph %>>% flrn)$train(task) prediction = glrn$predict(task, 142:144) prediction$score(msr(\"regr.rmse\")) #> regr.rmse  #>  26.84445  newdata = generate_newdata(task, 12L, \"month\") glrn$predict_newdata(newdata, task) #> <PredictionRegr> for 12 observations: #>  row_ids truth response #>        1    NA 439.1351 #>        2    NA 440.8059 #>        3    NA 459.0752 #>      ---   ---      --- #>       10    NA 473.3254 #>       11    NA 438.6678 #>       12    NA 441.2223"},{"path":"https://mlr3forecast.mlr-org.com/index.html","id":"example-common-target-transformations","dir":"","previous_headings":"Usage","what":"Example: common target transformations","title":"Extending mlr3 to Time Series Forecasting","text":"common target transformations forecasting : differencing (WIP) log transformation, see example power transformations Box-Cox Yeo-Johnson currently supported feature transformation target scaling/normalization, available see ","code":"trafo = po(\"targetmutate\",   param_vals = list(     trafo = function(x) log(x),     inverter = function(x) list(response = exp(x$response))   ) )  graph = po(\"fcst.lag\", lag = 1:12) %>>%   ppl(\"convert_types\", \"Date\", \"POSIXct\") %>>%   po(\"datefeatures\",     param_vals = list(       week_of_year = FALSE, day_of_week = FALSE, day_of_month = FALSE,       day_of_year = FALSE, is_day = FALSE, hour = FALSE, minute = FALSE,       second = FALSE     )   )  task = tsk(\"airpassengers\") flrn = ForecastRecursiveLearner$new(lrn(\"regr.ranger\")) glrn = as_learner(graph %>>% flrn) pipeline = ppl(\"targettrafo\", graph = glrn, trafo_pipeop = trafo) glrn = as_learner(pipeline)$train(task) prediction = glrn$predict(task, 142:144) prediction$score(msr(\"regr.rmse\")) graph = po(\"fcst.lag\", lag = 1:12) %>>%   ppl(\"convert_types\", \"Date\", \"POSIXct\") %>>%   po(\"datefeatures\",     param_vals = list(       week_of_year = FALSE, day_of_week = FALSE, day_of_month = FALSE,       day_of_year = FALSE, is_day = FALSE, hour = FALSE, minute = FALSE,       second = FALSE     )   )  task = tsk(\"airpassengers\") flrn = ForecastRecursiveLearner$new(lrn(\"regr.ranger\")) glrn = as_learner(graph %>>% flrn) trafo = po(\"fcst.targetdiff\", lag = 12L) pipeline = ppl(\"targettrafo\", graph = glrn, trafo_pipeop = trafo) glrn = as_learner(pipeline)$train(task) prediction = glrn$predict(task, 142:144) prediction$score(msr(\"regr.rmse\"))"},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastLearner.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast Learner — ForecastLearner","title":"Forecast Learner — ForecastLearner","text":"Forecast Learner Forecast Learner","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastLearner.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Forecast Learner — ForecastLearner","text":"mlr3::Learner -> ForecastLearner","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastLearner.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Forecast Learner — ForecastLearner","text":"learner (Learner) learner lag (integer()) lag","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastLearner.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Forecast Learner — ForecastLearner","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastLearner.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Forecast Learner — ForecastLearner","text":"ForecastLearner$new() ForecastLearner$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastLearner.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Forecast Learner — ForecastLearner","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastLearner.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Learner — ForecastLearner","text":"","code":"ForecastLearner$new(learner, lag)"},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastLearner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast Learner — ForecastLearner","text":"learner (Learner) lag (integer(1)) task (Task)","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastLearner.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Forecast Learner — ForecastLearner","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastLearner.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Learner — ForecastLearner","text":"","code":"ForecastLearner$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastLearner.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast Learner — ForecastLearner","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastRecursiveLearner.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast Learner — ForecastRecursiveLearner","title":"Forecast Learner — ForecastRecursiveLearner","text":"Forecast Learner Forecast Learner","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastRecursiveLearner.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Forecast Learner — ForecastRecursiveLearner","text":"mlr3::Learner -> ForecastRecursiveLearner","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastRecursiveLearner.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Forecast Learner — ForecastRecursiveLearner","text":"learner (Learner) learner","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastRecursiveLearner.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Forecast Learner — ForecastRecursiveLearner","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastRecursiveLearner.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Forecast Learner — ForecastRecursiveLearner","text":"ForecastRecursiveLearner$new() ForecastRecursiveLearner$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastRecursiveLearner.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Forecast Learner — ForecastRecursiveLearner","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastRecursiveLearner.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Learner — ForecastRecursiveLearner","text":"","code":"ForecastRecursiveLearner$new(learner)"},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastRecursiveLearner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast Learner — ForecastRecursiveLearner","text":"learner (Learner) task (Task)","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastRecursiveLearner.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Forecast Learner — ForecastRecursiveLearner","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastRecursiveLearner.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Learner — ForecastRecursiveLearner","text":"","code":"ForecastRecursiveLearner$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/ForecastRecursiveLearner.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast Learner — ForecastRecursiveLearner","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerFcst.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast Learner — LearnerFcst","title":"Forecast Learner — LearnerFcst","text":"Learner specializes mlr3::LearnerRegr forecast problems: task_type set \"fcst\". Creates Predictions class mlr3::PredictionRegr. Possible values predict_types : \"response\": Predicts numeric response observation test set. \"se\": Predicts standard error value response observation test set. \"distr\": Probability distribution VectorDistribution object (requires package distr6, available via repository https://raphaels1.r-universe.dev). Predefined learners can found dictionary mlr3::mlr_learners. Essential regression learners can found dictionary loading mlr3learners. Additional learners implement Github package https://github.com/mlr-org/mlr3extralearners.","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerFcst.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Forecast Learner — LearnerFcst","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerFcst","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerFcst.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Forecast Learner — LearnerFcst","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerFcst.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Forecast Learner — LearnerFcst","text":"LearnerFcst$new() LearnerFcst$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerFcst.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Forecast Learner — LearnerFcst","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerFcst.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Learner — LearnerFcst","text":"","code":"LearnerFcst$new(   id,   param_set = ps(),   predict_types = \"response\",   feature_types = character(),   properties = character(),   data_formats,   packages = character(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerFcst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast Learner — LearnerFcst","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set hyperparameters. predict_types (character()) Supported predict types. Must subset mlr_reflections$learner_predict_types. feature_types (character()) Feature types learner operates . Must subset mlr_reflections$task_feature_types. properties (character()) Set properties Learner. Must subset mlr_reflections$learner_properties. following properties currently standardized understood learners mlr3: \"missings\": learner can handle missing values data. \"weights\": learner supports observation weights. \"importance\": learner supports extraction importance scores, .e. comes $importance() extractor function (see section optional extractors Learner). \"selected_features\": learner supports extraction set selected features, .e. comes $selected_features() extractor function (see section optional extractors Learner). \"oob_error\": learner supports extraction estimated bag error, .e. comes oob_error() extractor function (see section optional extractors Learner). \"validation\": learner can use validation task training. \"internal_tuning\": learner able internally optimize hyperparameters (also tagged \"internal_tuning\"). \"marshal\": save learners property, need call $marshal() first. learner marshaled state, call first need call $unmarshal() use model, e.g. prediction. data_formats (character()) Deprecated: ignored, removed future. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerFcst.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Forecast Learner — LearnerFcst","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerFcst.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Learner — LearnerFcst","text":"","code":"LearnerFcst$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerFcst.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast Learner — LearnerFcst","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerFcst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast Learner — LearnerFcst","text":"","code":"# get all forecast learners from mlr_learners: learners = lrns(mlr_learners$keys(\"^fcst\")) names(learners) #> [1] \"fcst.arfima\"     \"fcst.arima\"      \"fcst.auto_arima\" \"fcst.bats\"       #> [5] \"fcst.ets\"        \"fcst.tbats\"       # get a specific learner from mlr_learners: learner = lrn(\"fcst.arima\") print(learner) #> <LearnerFcstArima:fcst.arima>: ARIMA #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3forecast, forecast #> * Predict Types:  [response], quantiles #> * Feature Types: logical, integer, numeric, Date #> * Properties: missings"},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerRegrForecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract class for forecast package learner — LearnerRegrForecast","title":"Abstract class for forecast package learner — LearnerRegrForecast","text":"Abstract class forecast package learner Abstract class forecast package learner","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerRegrForecast.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract class for forecast package learner — LearnerRegrForecast","text":"mlr3::Learner -> mlr3::LearnerRegr -> mlr3forecast::LearnerFcst -> LearnerRegrForecast","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerRegrForecast.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract class for forecast package learner — LearnerRegrForecast","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train() mlr3forecast::LearnerFcst$initialize()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerRegrForecast.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract class for forecast package learner — LearnerRegrForecast","text":"LearnerRegrForecast$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerRegrForecast.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract class for forecast package learner — LearnerRegrForecast","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerRegrForecast.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract class for forecast package learner — LearnerRegrForecast","text":"","code":"LearnerRegrForecast$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/LearnerRegrForecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract class for forecast package learner — LearnerRegrForecast","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDA.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Directional Accuracy — MeasureMDA","title":"Mean Directional Accuracy — MeasureMDA","text":"Mean Directional Accuracy Mean Directional Accuracy","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDA.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Mean Directional Accuracy — MeasureMDA","text":"mlr3::Measure -> MeasureMDA","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDA.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Mean Directional Accuracy — MeasureMDA","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDA.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Mean Directional Accuracy — MeasureMDA","text":"MeasureMDA$new() MeasureMDA$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDA.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Mean Directional Accuracy — MeasureMDA","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDA.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Directional Accuracy — MeasureMDA","text":"","code":"MeasureMDA$new()"},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDA.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Mean Directional Accuracy — MeasureMDA","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDA.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Directional Accuracy — MeasureMDA","text":"","code":"MeasureMDA$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Directional Accuracy — MeasureMDA","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDPV.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Directional Percentage Value — MeasureMDPV","title":"Mean Directional Percentage Value — MeasureMDPV","text":"Mean Directional Percentage Value Mean Directional Percentage Value","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDPV.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Mean Directional Percentage Value — MeasureMDPV","text":"mlr3::Measure -> MeasureMDPV","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDPV.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Mean Directional Percentage Value — MeasureMDPV","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDPV.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Mean Directional Percentage Value — MeasureMDPV","text":"MeasureMDPV$new() MeasureMDPV$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDPV.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Mean Directional Percentage Value — MeasureMDPV","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDPV.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Directional Percentage Value — MeasureMDPV","text":"","code":"MeasureMDPV$new()"},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDPV.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Mean Directional Percentage Value — MeasureMDPV","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDPV.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Directional Percentage Value — MeasureMDPV","text":"","code":"MeasureMDPV$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDPV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Directional Percentage Value — MeasureMDPV","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDV.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Directional Value — MeasureMDV","title":"Mean Directional Value — MeasureMDV","text":"Mean Directional Value Mean Directional Value","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDV.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Mean Directional Value — MeasureMDV","text":"mlr3::Measure -> MeasureMDV","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDV.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Mean Directional Value — MeasureMDV","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDV.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Mean Directional Value — MeasureMDV","text":"MeasureMDV$new() MeasureMDV$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDV.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Mean Directional Value — MeasureMDV","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDV.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Directional Value — MeasureMDV","text":"","code":"MeasureMDV$new()"},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDV.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Mean Directional Value — MeasureMDV","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDV.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Directional Value — MeasureMDV","text":"","code":"MeasureMDV$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/MeasureMDV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Directional Value — MeasureMDV","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/TaskFcst.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast Task — TaskFcst","title":"Forecast Task — TaskFcst","text":"task specializes Task, TaskSupervised TaskRegr forecasting problems. target column assumed numeric. task_type set \"fcst\". recommended use as_task_fcst() construction. Predefined tasks stored dictionary mlr_tasks.","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/TaskFcst.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Forecast Task — TaskFcst","text":"mlr3::Task -> mlr3::TaskSupervised -> mlr3::TaskRegr -> TaskFcst","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/TaskFcst.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Forecast Task — TaskFcst","text":"properties (character()) Set task properties. Possible properties stored mlr_reflections$task_properties. following properties currently standardized understood tasks mlr3: \"strata\": task resampled using one stratification variables (role \"stratum\"). \"groups\": task comes grouping/blocking information (role \"group\"). \"weights\": task comes observation weights (role \"weight\"). \"ordered\": task columns define row order (role \"order\"). \"keys\": task columns define time series \"key\"). Note listed properties calculated $col_roles may set explicitly.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/TaskFcst.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Forecast Task — TaskFcst","text":"mlr3::Task$add_strata() mlr3::Task$cbind() mlr3::Task$data() mlr3::Task$divide() mlr3::Task$droplevels() mlr3::Task$filter() mlr3::Task$format() mlr3::Task$formula() mlr3::Task$head() mlr3::Task$help() mlr3::Task$levels() mlr3::Task$missings() mlr3::Task$print() mlr3::Task$rbind() mlr3::Task$rename() mlr3::Task$select() mlr3::Task$set_col_roles() mlr3::Task$set_levels() mlr3::Task$set_row_roles() mlr3::TaskRegr$truth()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/TaskFcst.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Forecast Task — TaskFcst","text":"TaskFcst$new() TaskFcst$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/TaskFcst.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Forecast Task — TaskFcst","text":"Creates new instance R6 class. function as_task_fcst() provides alternative way construct forecast tasks.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/TaskFcst.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Task — TaskFcst","text":"","code":"TaskFcst$new(   id,   backend,   target,   order,   key = NULL,   label = NA_character_,   extra_args = list() )"},{"path":"https://mlr3forecast.mlr-org.com/reference/TaskFcst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast Task — TaskFcst","text":"id (character(1)) Identifier new instance. backend (DataBackend) Either DataBackend, object convertible DataBackend as_data_backend(). E.g., data.frame() converted DataBackendDataTable. target (character(1)) Name target column. order (character(1)) Name order column. key (character(1)) Name key column. label (character(1)) Label new instance. extra_args (named list()) Named list constructor arguments, required converting task types via convert_task().","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/TaskFcst.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Forecast Task — TaskFcst","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/TaskFcst.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Task — TaskFcst","text":"","code":"TaskFcst$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/TaskFcst.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast Task — TaskFcst","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/TaskFcst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast Task — TaskFcst","text":"","code":"library(data.table) airpassengers = tsbox::ts_dt(AirPassengers) setnames(airpassengers, c(\"date\", \"passengers\")) task = as_task_fcst(airpassengers, target = \"passengers\", order = \"date\") task$task_type #> [1] \"fcst\" task$formula() #> passengers ~ . #> NULL task$truth() #>   [1] 112 118 132 129 121 135 148 148 136 119 104 118 115 126 141 135 125 149 #>  [19] 170 170 158 133 114 140 145 150 178 163 172 178 199 199 184 162 146 166 #>  [37] 171 180 193 181 183 218 230 242 209 191 172 194 196 196 236 235 229 243 #>  [55] 264 272 237 211 180 201 204 188 235 227 234 264 302 293 259 229 203 229 #>  [73] 242 233 267 269 270 315 364 347 312 274 237 278 284 277 317 313 318 374 #>  [91] 413 405 355 306 271 306 315 301 356 348 355 422 465 467 404 347 305 336 #> [109] 340 318 362 348 363 435 491 505 404 359 310 337 360 342 406 396 420 472 #> [127] 548 559 463 407 362 405 417 391 419 461 472 535 622 606 508 461 390 432"},{"path":"https://mlr3forecast.mlr-org.com/reference/as_task_fcst.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Forecast Task — as_task_fcst","title":"Convert to a Forecast Task — as_task_fcst","text":"Convert object TaskFcst. S3 generic. mlr3forecast ships methods following objects: TaskFcst: ensure identity data.frame() mlr3::DataBackend: provides alternative constructor TaskFcst.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/as_task_fcst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Forecast Task — as_task_fcst","text":"","code":"as_task_fcst(x, ...)  # S3 method for class 'TaskFcst' as_task_fcst(x, clone = FALSE, ...)  # S3 method for class 'DataBackend' as_task_fcst(   x,   target = NULL,   order = character(),   key = character(),   id = deparse1(substitute(x)),   label = NA_character_,   ... )  # S3 method for class 'data.frame' as_task_fcst(   x,   target = NULL,   order = character(),   key = character(),   id = deparse1(substitute(x)),   label = NA_character_,   ... )"},{"path":"https://mlr3forecast.mlr-org.com/reference/as_task_fcst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Forecast Task — as_task_fcst","text":"x () Object convert. ... () Additional arguments. clone (logical(1)) TRUE, ensures returned object input x. target (character(1)) Name target column. order (character(1)) Name order column. key (character(1)) Name key column. id (character(1)) Id new task. Defaults (deparsed substituted) name data argument. label (character(1)) Label new instance.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/as_task_fcst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a Forecast Task — as_task_fcst","text":"TaskFcst.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/as_task_fcst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to a Forecast Task — as_task_fcst","text":"","code":"library(data.table) airpassengers = tsbox::ts_dt(AirPassengers) setnames(airpassengers, c(\"date\", \"passengers\")) as_task_fcst(airpassengers, target = \"passengers\", order = \"date\") #> <TaskFcst:airpassengers> (144 x 2) #> * Target: passengers #> * Properties: ordered #> * Features (1): #>   - dte (1): date #> * Order by: date"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr3forecast-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3forecast: Extending 'mlr3' to Time Series Forecasting — mlr3forecast-package","title":"mlr3forecast: Extending 'mlr3' to Time Series Forecasting — mlr3forecast-package","text":"Extends 'mlr3' ecosystem time series forecasting.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr3forecast-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3forecast: Extending 'mlr3' to Time Series Forecasting — mlr3forecast-package","text":"Maintainer: Maximilian Mücke muecke.maximilian@gmail.com (ORCID)","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arfima.html","id":null,"dir":"Reference","previous_headings":"","what":"ARFIMA — mlr_learners_fcst.arfima","title":"ARFIMA — mlr_learners_fcst.arfima","text":"ARFIMA model. Calls forecast::arfima() package forecast.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arfima.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"ARFIMA — mlr_learners_fcst.arfima","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"fcst.arfima\") lrn(\"fcst.arfima\")"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arfima.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"ARFIMA — mlr_learners_fcst.arfima","text":"Task type: “fcst” Predict Types: “response”, “quantiles” Feature Types: “logical”, “integer”, “numeric”, “Date” Required Packages: mlr3, mlr3forecast, forecast","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arfima.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ARFIMA — mlr_learners_fcst.arfima","text":"Haslett, John, Raftery, E (1989). “Space-time Modelling Long-memory Dependence: Assessing Ireland's Wind Power Resource.” Journal Royal Statistical Society: Series C (Applied Statistics), 38(1), 1–21. Hyndman, J. R, Khandakar, Yeasmin (2008). “Automatic Time Series Forecasting: forecast Package R.” Journal Statistical Software, 27(3), 1–22. doi:10.18637/jss.v027.i03 , https://www.jstatsoft.org/index.php/jss/article/view/v027i03.","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arfima.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"ARFIMA — mlr_learners_fcst.arfima","text":"mlr3::Learner -> mlr3::LearnerRegr -> mlr3forecast::LearnerFcst -> mlr3forecast::LearnerRegrForecast -> LearnerFcstArfima","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arfima.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ARFIMA — mlr_learners_fcst.arfima","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arfima.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ARFIMA — mlr_learners_fcst.arfima","text":"LearnerFcstArfima$new() LearnerFcstArfima$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arfima.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ARFIMA — mlr_learners_fcst.arfima","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arfima.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARFIMA — mlr_learners_fcst.arfima","text":"","code":"LearnerFcstArfima$new()"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arfima.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ARFIMA — mlr_learners_fcst.arfima","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arfima.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ARFIMA — mlr_learners_fcst.arfima","text":"","code":"LearnerFcstArfima$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arfima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARFIMA — mlr_learners_fcst.arfima","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arima.html","id":null,"dir":"Reference","previous_headings":"","what":"ARIMA — mlr_learners_fcst.arima","title":"ARIMA — mlr_learners_fcst.arima","text":"ARIMA model. Calls forecast::Arima() package forecast.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arima.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"ARIMA — mlr_learners_fcst.arima","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"fcst.arima\") lrn(\"fcst.arima\")"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arima.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"ARIMA — mlr_learners_fcst.arima","text":"Task type: “fcst” Predict Types: “response”, “quantiles” Feature Types: “logical”, “integer”, “numeric”, “Date” Required Packages: mlr3, mlr3forecast, forecast","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arima.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ARIMA — mlr_learners_fcst.arima","text":"Hyndman, R.J., Athanasopoulos, G. (2018). Forecasting: principles practice, 2nd edition. OTexts, Melbourne, Australia. https://OTexts.com/fpp2/.","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arima.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"ARIMA — mlr_learners_fcst.arima","text":"mlr3::Learner -> mlr3::LearnerRegr -> mlr3forecast::LearnerFcst -> mlr3forecast::LearnerRegrForecast -> LearnerFcstArima","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arima.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ARIMA — mlr_learners_fcst.arima","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arima.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ARIMA — mlr_learners_fcst.arima","text":"LearnerFcstArima$new() LearnerFcstArima$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arima.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ARIMA — mlr_learners_fcst.arima","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arima.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARIMA — mlr_learners_fcst.arima","text":"","code":"LearnerFcstArima$new()"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arima.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ARIMA — mlr_learners_fcst.arima","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arima.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ARIMA — mlr_learners_fcst.arima","text":"","code":"LearnerFcstArima$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.arima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARIMA — mlr_learners_fcst.arima","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.auto_arima.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto ARIMA — mlr_learners_fcst.auto_arima","title":"Auto ARIMA — mlr_learners_fcst.auto_arima","text":"Auto ARIMA model. Calls forecast::auto.arima() package forecast.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.auto_arima.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Auto ARIMA — mlr_learners_fcst.auto_arima","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"fcst.auto_arima\") lrn(\"fcst.auto_arima\")"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.auto_arima.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Auto ARIMA — mlr_learners_fcst.auto_arima","text":"Task type: “fcst” Predict Types: “response”, “quantiles” Feature Types: “logical”, “integer”, “numeric”, “Date” Required Packages: mlr3, mlr3forecast, forecast","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.auto_arima.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Auto ARIMA — mlr_learners_fcst.auto_arima","text":"Hyndman, J. R, Khandakar, Yeasmin (2008). “Automatic Time Series Forecasting: forecast Package R.” Journal Statistical Software, 27(3), 1–22. doi:10.18637/jss.v027.i03 , https://www.jstatsoft.org/index.php/jss/article/view/v027i03. Wang, Xiaozhe, Smith, Kate, Hyndman, Rob (2006). “Characteristic-based clustering time series data.” Data Mining Knowledge Discovery, 13, 335–364.","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.auto_arima.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Auto ARIMA — mlr_learners_fcst.auto_arima","text":"mlr3::Learner -> mlr3::LearnerRegr -> mlr3forecast::LearnerFcst -> mlr3forecast::LearnerRegrForecast -> LearnerFcstAutoArima","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.auto_arima.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Auto ARIMA — mlr_learners_fcst.auto_arima","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.auto_arima.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Auto ARIMA — mlr_learners_fcst.auto_arima","text":"LearnerFcstAutoArima$new() LearnerFcstAutoArima$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.auto_arima.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Auto ARIMA — mlr_learners_fcst.auto_arima","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.auto_arima.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto ARIMA — mlr_learners_fcst.auto_arima","text":"","code":"LearnerFcstAutoArima$new()"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.auto_arima.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Auto ARIMA — mlr_learners_fcst.auto_arima","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.auto_arima.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto ARIMA — mlr_learners_fcst.auto_arima","text":"","code":"LearnerFcstAutoArima$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.auto_arima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto ARIMA — mlr_learners_fcst.auto_arima","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.bats.html","id":null,"dir":"Reference","previous_headings":"","what":"BATS — mlr_learners_fcst.bats","title":"BATS — mlr_learners_fcst.bats","text":"BATS model. Calls forecast::bats() package forecast.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.bats.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"BATS — mlr_learners_fcst.bats","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"fcst.bats\") lrn(\"fcst.bats\")"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.bats.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"BATS — mlr_learners_fcst.bats","text":"Task type: “fcst” Predict Types: “response”, “quantiles” Feature Types: “integer”, “numeric”, “Date” Required Packages: mlr3, mlr3forecast, forecast","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.bats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"BATS — mlr_learners_fcst.bats","text":"De Livera, .M., Hyndman, R.J., Snyder &, D. R (2011). “Forecasting time series complex seasonal patterns using exponential smoothing.” Journal American Statistical Association, 106(496), 1513–1527.","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.bats.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"BATS — mlr_learners_fcst.bats","text":"mlr3::Learner -> mlr3::LearnerRegr -> mlr3forecast::LearnerFcst -> mlr3forecast::LearnerRegrForecast -> LearnerFcstBats","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.bats.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"BATS — mlr_learners_fcst.bats","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.bats.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"BATS — mlr_learners_fcst.bats","text":"LearnerFcstBats$new() LearnerFcstBats$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.bats.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"BATS — mlr_learners_fcst.bats","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.bats.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BATS — mlr_learners_fcst.bats","text":"","code":"LearnerFcstBats$new()"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.bats.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"BATS — mlr_learners_fcst.bats","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.bats.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"BATS — mlr_learners_fcst.bats","text":"","code":"LearnerFcstBats$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.bats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BATS — mlr_learners_fcst.bats","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.ets.html","id":null,"dir":"Reference","previous_headings":"","what":"ETS — mlr_learners_fcst.ets","title":"ETS — mlr_learners_fcst.ets","text":"ETS model. Calls forecast::ets() package forecast.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.ets.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"ETS — mlr_learners_fcst.ets","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"fcst.ets\") lrn(\"fcst.ets\")"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.ets.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"ETS — mlr_learners_fcst.ets","text":"Task type: “fcst” Predict Types: “response”, “quantiles” Feature Types: “integer”, “numeric”, “Date” Required Packages: mlr3, mlr3forecast, forecast","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.ets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ETS — mlr_learners_fcst.ets","text":"Hyndman, R.J., Koehler, .B., Snyder, R.D., Grose, S. (2002). “state space framework automatic forecasting using exponential smoothing methods.” International J. Forecasting, 18(3), 439–454. Hyndman, R.J., Akram, Md., Archibald, B. (2008). “admissible parameter space exponential smoothing models.” Annals Statistical Mathematics, 60(2), 407–426. Hyndman, R.J., Koehler, .B., Ord, J.K., Snyder, R.D. (2008). Forecasting exponential smoothing: state space approach. Springer-Verlag. http://www.exponentialsmoothing.net.","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.ets.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"ETS — mlr_learners_fcst.ets","text":"mlr3::Learner -> mlr3::LearnerRegr -> mlr3forecast::LearnerFcst -> mlr3forecast::LearnerRegrForecast -> LearnerFcstEts","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.ets.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ETS — mlr_learners_fcst.ets","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.ets.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ETS — mlr_learners_fcst.ets","text":"LearnerFcstEts$new() LearnerFcstEts$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.ets.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ETS — mlr_learners_fcst.ets","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.ets.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETS — mlr_learners_fcst.ets","text":"","code":"LearnerFcstEts$new()"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.ets.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ETS — mlr_learners_fcst.ets","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.ets.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ETS — mlr_learners_fcst.ets","text":"","code":"LearnerFcstEts$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.ets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETS — mlr_learners_fcst.ets","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.tbats.html","id":null,"dir":"Reference","previous_headings":"","what":"TBATS — mlr_learners_fcst.tbats","title":"TBATS — mlr_learners_fcst.tbats","text":"TBATS model. Calls forecast::tbats() package forecast.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.tbats.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"TBATS — mlr_learners_fcst.tbats","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"fcst.tbats\") lrn(\"fcst.tbats\")"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.tbats.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"TBATS — mlr_learners_fcst.tbats","text":"Task type: “fcst” Predict Types: “response”, “quantiles” Feature Types: “integer”, “numeric”, “Date” Required Packages: mlr3, mlr3forecast, forecast","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.tbats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"TBATS — mlr_learners_fcst.tbats","text":"De Livera, .M., Hyndman, R.J., Snyder &, D. R (2011). “Forecasting time series complex seasonal patterns using exponential smoothing.” Journal American Statistical Association, 106(496), 1513–1527.","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.tbats.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"TBATS — mlr_learners_fcst.tbats","text":"mlr3::Learner -> mlr3::LearnerRegr -> mlr3forecast::LearnerFcst -> mlr3forecast::LearnerRegrForecast -> LearnerFcstTbats","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.tbats.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TBATS — mlr_learners_fcst.tbats","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.tbats.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TBATS — mlr_learners_fcst.tbats","text":"LearnerFcstTbats$new() LearnerFcstTbats$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.tbats.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"TBATS — mlr_learners_fcst.tbats","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.tbats.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TBATS — mlr_learners_fcst.tbats","text":"","code":"LearnerFcstTbats$new()"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.tbats.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TBATS — mlr_learners_fcst.tbats","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.tbats.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TBATS — mlr_learners_fcst.tbats","text":"","code":"LearnerFcstTbats$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_learners_fcst.tbats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TBATS — mlr_learners_fcst.tbats","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_pipeops_fcst.lag.html","id":null,"dir":"Reference","previous_headings":"","what":"Creat Lags of Target Variable — mlr_pipeops_fcst.lag","title":"Creat Lags of Target Variable — mlr_pipeops_fcst.lag","text":"...","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_pipeops_fcst.lag.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Creat Lags of Target Variable — mlr_pipeops_fcst.lag","text":"parameters parameters inherited mlr3pipelines::PipeOpTaskPreproc, well following parameters: lag :: integer() lags create.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_pipeops_fcst.lag.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Creat Lags of Target Variable — mlr_pipeops_fcst.lag","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> PipeOpFcstLag","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_pipeops_fcst.lag.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Creat Lags of Target Variable — mlr_pipeops_fcst.lag","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_pipeops_fcst.lag.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Creat Lags of Target Variable — mlr_pipeops_fcst.lag","text":"PipeOpFcstLag$new() PipeOpFcstLag$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_pipeops_fcst.lag.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Creat Lags of Target Variable — mlr_pipeops_fcst.lag","text":"Initializes new instance Class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_pipeops_fcst.lag.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creat Lags of Target Variable — mlr_pipeops_fcst.lag","text":"","code":"PipeOpFcstLag$new(id = \"fcst.lags\", param_vals = list())"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_pipeops_fcst.lag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creat Lags of Target Variable — mlr_pipeops_fcst.lag","text":"id (character(1)) Identifier resulting object, default \"fcst.lags\". param_vals (named list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction. Default list().","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_pipeops_fcst.lag.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Creat Lags of Target Variable — mlr_pipeops_fcst.lag","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_pipeops_fcst.lag.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Creat Lags of Target Variable — mlr_pipeops_fcst.lag","text":"","code":"PipeOpFcstLag$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_pipeops_fcst.lag.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creat Lags of Target Variable — mlr_pipeops_fcst.lag","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_pipeops_fcst.lag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creat Lags of Target Variable — mlr_pipeops_fcst.lag","text":"","code":"set.seed(1234L)"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"Splits data using folds-folds (default: 10 folds) rolling window cross-validation.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"Resampling can instantiated via dictionary mlr_resamplings associated sugar function rsmp():","code":"mlr_resamplings$get(\"forecast_cv\") rsmp(\"forecast_cv\")"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"horizon (integer(1)) Forecasting horizon test sets, .e. number test samples fold. folds (integer(1)) Number folds. step_size (integer(1)) Step size windows. window_size (integer(1)) (Minimal) Size rolling window. fixed_window (logial(1)) fixed sized window used? FALSE expanding window used.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"Bergmeir, Christoph, Hyndman, J R, Koo, Bonsoo (2018). “note validity cross-validation evaluating autoregressive time series prediction.” Computational Statistics & Data Analysis, 120, 70–83.","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"mlr3::Resampling -> ResamplingForecastCV","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"iters (integer(1)) Returns number resampling iterations, depending values stored param_set.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"mlr3::Resampling$format() mlr3::Resampling$help() mlr3::Resampling$instantiate() mlr3::Resampling$print() mlr3::Resampling$test_set() mlr3::Resampling$train_set()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"ResamplingForecastCV$new() ResamplingForecastCV$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"","code":"ResamplingForecastCV$new()"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"","code":"ResamplingForecastCV$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast Cross-Validation Resampling — mlr_resamplings_forecast_cv","text":"","code":"# Create a task with 10 observations task = tsk(\"airpassengers\") task$filter(1:20)  # Instantiate Resampling cv = rsmp(\"forecast_cv\", folds = 3, fixed_window = FALSE) cv$instantiate(task)  # Individual sets: cv$train_set(1) #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 cv$test_set(1) #> [1] 20 intersect(cv$train_set(1), cv$test_set(1)) #> integer(0)  # Internal storage: cv$instance #  list #> $train #> $train[[1]] #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 #>  #> $train[[2]] #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 #>  #> $train[[3]] #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 #>  #>  #> $test #> $test[[1]] #> [1] 20 #>  #> $test[[2]] #> [1] 19 #>  #> $test[[3]] #> [1] 18 #>  #>"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_holdout.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","title":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","text":"Splits data training set test set. Parameter ratio determines ratio observation going training set (default: 2/3).","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_holdout.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","text":"Resampling can instantiated via dictionary mlr_resamplings associated sugar function rsmp():","code":"mlr_resamplings$get(\"forecast_cv\") rsmp(\"forecast_cv\")"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_holdout.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","text":"ratio (numeric(1)) Ratio observations put training set. Mutually exclusive parameter n. n (integer(1)) Number observations put training set. negative, absolute value determines number observations test set. Mutually exclusive parameter ratio.","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_holdout.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","text":"mlr3::Resampling -> ResamplingForecastHoldout","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_holdout.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","text":"iters (integer(1)) Returns number resampling iterations, depending values stored param_set.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_holdout.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","text":"mlr3::Resampling$format() mlr3::Resampling$help() mlr3::Resampling$instantiate() mlr3::Resampling$print() mlr3::Resampling$test_set() mlr3::Resampling$train_set()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_holdout.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","text":"ResamplingForecastHoldout$new() ResamplingForecastHoldout$clone()","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_holdout.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_holdout.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","text":"","code":"ResamplingForecastHoldout$new()"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_holdout.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","text":"objects class cloneable method.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_holdout.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","text":"","code":"ResamplingForecastHoldout$clone(deep = FALSE)"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_holdout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_resamplings_forecast_holdout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast Holdout Resampling — mlr_resamplings_forecast_holdout","text":"","code":"# Create a task with 10 observations task = tsk(\"airpassengers\") task$filter(1:10)  # Instantiate Resampling holdout = rsmp(\"forecast_holdout\", ratio = 0.5) holdout$instantiate(task)  # Individual sets: holdout$train_set(1) #> [1] 1 2 3 4 5 holdout$test_set(1) #> [1]  6  7  8  9 10  # Disjunct sets: intersect(holdout$train_set(1), holdout$test_set(1)) #> integer(0)  # Internal storage: holdout$instance # simple list #> $train #> [1] 1 2 3 4 5 #>  #> $test #> [1]  6  7  8  9 10 #>"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_tasks_airpassengers.html","id":null,"dir":"Reference","previous_headings":"","what":"Air Passengers Forecast Task — mlr_tasks_airpassengers","title":"Air Passengers Forecast Task — mlr_tasks_airpassengers","text":"toy forecast task datasets::AirPassengers data set. task represents monthly time series ordered feature date.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_tasks_airpassengers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Air Passengers Forecast Task — mlr_tasks_airpassengers","text":"R6::R6Class inheriting TaskFcst.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_tasks_airpassengers.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Air Passengers Forecast Task — mlr_tasks_airpassengers","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"airpassengers\") tsk(\"airpassengers\")"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_tasks_airpassengers.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Air Passengers Forecast Task — mlr_tasks_airpassengers","text":"Task type: “fcst” Dimensions: 144x2 Properties: “ordered” Missings: FALSE Target: “passengers” Features: “date”","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_tasks_electricity.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily electricity demand for Victoria, Australia Forecast Task — mlr_tasks_electricity","title":"Daily electricity demand for Victoria, Australia Forecast Task — mlr_tasks_electricity","text":"forecast task tsibbledata::vic_elec data set. task represents daily time series ordered date.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_tasks_electricity.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daily electricity demand for Victoria, Australia Forecast Task — mlr_tasks_electricity","text":"R6::R6Class inheriting TaskFcst.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_tasks_electricity.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Daily electricity demand for Victoria, Australia Forecast Task — mlr_tasks_electricity","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"electricity\") tsk(\"electricity\")"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_tasks_electricity.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Daily electricity demand for Victoria, Australia Forecast Task — mlr_tasks_electricity","text":"Task type: “fcst” Dimensions: 1096x4 Properties: “ordered” Missings: FALSE Target: “demand” Features: “date”, “holiday”, “temperature”","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_tasks_livestock.html","id":null,"dir":"Reference","previous_headings":"","what":"Australian Livestock Slaughter Forecast Task — mlr_tasks_livestock","title":"Australian Livestock Slaughter Forecast Task — mlr_tasks_livestock","text":"forecast task tsibbledata::aus_livestock data set. task represents monthly time series ordered month.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_tasks_livestock.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Australian Livestock Slaughter Forecast Task — mlr_tasks_livestock","text":"R6::R6Class inheriting TaskFcst.","code":""},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_tasks_livestock.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Australian Livestock Slaughter Forecast Task — mlr_tasks_livestock","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"livestock\") tsk(\"livestock\")"},{"path":"https://mlr3forecast.mlr-org.com/reference/mlr_tasks_livestock.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Australian Livestock Slaughter Forecast Task — mlr_tasks_livestock","text":"Task type: “fcst” Dimensions: 29364x4 Properties: “ordered”, “keys” Missings: FALSE Target: “count” Features: “animal”, “month”, “state”","code":""},{"path":[]},{"path":"https://mlr3forecast.mlr-org.com/news/index.html","id":"mlr3forecast-001","dir":"Changelog","previous_headings":"","what":"mlr3forecast 0.0.1","title":"mlr3forecast 0.0.1","text":"Initial CRAN submission.","code":""}]
