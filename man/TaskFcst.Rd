% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TaskFcst.R
\name{TaskFcst}
\alias{TaskFcst}
\title{Forecast Task}
\description{
This task specializes \link[mlr3:Task]{mlr3::Task}, \link[mlr3:TaskSupervised]{mlr3::TaskSupervised} and \link[mlr3:TaskRegr]{mlr3::TaskRegr} for forecasting problems.
The target column is assumed to be numeric.
The \code{task_type} is set to \code{"fcst"}.

It is recommended to use \code{\link[=as_task_fcst]{as_task_fcst()}} for construction.
Predefined tasks are stored in the \link[mlr3misc:Dictionary]{dictionary} \link[mlr3:mlr_tasks]{mlr3::mlr_tasks}.
}
\examples{
\dontshow{if (requireNamespace("tsbox", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
library(data.table)
airpassengers = tsbox::ts_dt(AirPassengers)
setnames(airpassengers, c("month", "passengers"))
task = as_task_fcst(airpassengers, target = "passengers", order = "month", freq = "monthly")
task$task_type
task$formula()
task$truth()
\dontshow{\}) # examplesIf}
}
\seealso{
\itemize{
\item Chapter in the \href{https://mlr3book.mlr-org.com/}{mlr3book}:
\url{https://mlr3book.mlr-org.com/chapters/chapter2/data_and_basic_modeling.html}
\item Package \CRANpkg{mlr3data} for more toy tasks.
\item Package \CRANpkg{mlr3oml} for downloading tasks from \url{https://www.openml.org}.
\item Package \CRANpkg{mlr3viz} for some generic visualizations.
\item \link[mlr3misc:Dictionary]{Dictionary} of \link[mlr3:Task]{Tasks}: \link[mlr3:mlr_tasks]{mlr3::mlr_tasks}
\item \code{as.data.table(mlr_tasks)} for a table of available \link[mlr3:Task]{Tasks} in the running session (depending on the loaded packages).
\item \CRANpkg{mlr3fselect} and \CRANpkg{mlr3filters} for feature selection and feature filtering.
\item Extension packages for additional task types:
\itemize{
\item Unsupervised clustering: \CRANpkg{mlr3cluster}
\item Probabilistic supervised regression and survival analysis: \url{https://mlr3proba.mlr-org.com/}.
}
}

Other Task: 
\code{\link{mlr_tasks_airpassengers}},
\code{\link{mlr_tasks_electricity}},
\code{\link{mlr_tasks_livestock}},
\code{\link{mlr_tasks_lynx}},
\code{\link{mlr_tasks_usaccdeaths}}
}
\concept{Task}
\section{Super classes}{
\code{\link[mlr3:Task]{mlr3::Task}} -> \code{\link[mlr3:TaskSupervised]{mlr3::TaskSupervised}} -> \code{\link[mlr3:TaskRegr]{mlr3::TaskRegr}} -> \code{TaskFcst}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{freq}}{(\code{character(1)})\cr
The frequency of the time series.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{properties}}{(\code{character()})\cr
Set of task properties.
Possible properties are are stored in \link[mlr3:mlr_reflections]{mlr_reflections$task_properties}.
The following properties are currently standardized and understood by tasks in \CRANpkg{mlr3}:
\itemize{
\item \code{"strata"}: The task is resampled using one or more stratification variables (role \code{"stratum"}).
\item \code{"groups"}: The task comes with grouping/blocking information (role \code{"group"}).
\item \code{"weights"}: The task comes with observation weights (role \code{"weight"}).
\item \code{"ordered"}: The task has columns which define the row order (role \code{"order"}).
\item \code{"keys"}: The task has columns which define the time series \code{"key"}).
}

Note that above listed properties are calculated from the \verb{$col_roles} and may not be set explicitly.}

\item{\code{order}}{(\code{\link[data.table:data.table]{data.table::data.table()}})\cr
If the task has a column with designated role \code{"order"}, a table with two or more columns:
\itemize{
\item \code{row_id} (\code{integer()}), and
\item \code{order} (\code{Date()} | \code{POSIXct()} | \code{numeric()}).
}

Returns \code{NULL} if there are is no order column.}

\item{\code{key}}{(\code{\link[data.table:data.table]{data.table::data.table()}})\cr
If the task has a column with designated role \code{"key"}, a table with two or more columns:
\itemize{
\item \code{row_id} (\code{integer()}), and
\item key variable(s) (\code{factor()}).
}

If there is only one key column, it will be named as \code{key}.
Returns \code{NULL} if there are are no key columns.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TaskFcst-new}{\code{TaskFcst$new()}}
\item \href{#method-TaskFcst-data}{\code{TaskFcst$data()}}
\item \href{#method-TaskFcst-print}{\code{TaskFcst$print()}}
\item \href{#method-TaskFcst-clone}{\code{TaskFcst$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="add_strata"><a href='../../mlr3/html/Task.html#method-Task-add_strata'><code>mlr3::Task$add_strata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="cbind"><a href='../../mlr3/html/Task.html#method-Task-cbind'><code>mlr3::Task$cbind()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="divide"><a href='../../mlr3/html/Task.html#method-Task-divide'><code>mlr3::Task$divide()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="droplevels"><a href='../../mlr3/html/Task.html#method-Task-droplevels'><code>mlr3::Task$droplevels()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="filter"><a href='../../mlr3/html/Task.html#method-Task-filter'><code>mlr3::Task$filter()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="format"><a href='../../mlr3/html/Task.html#method-Task-format'><code>mlr3::Task$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="formula"><a href='../../mlr3/html/Task.html#method-Task-formula'><code>mlr3::Task$formula()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="head"><a href='../../mlr3/html/Task.html#method-Task-head'><code>mlr3::Task$head()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="help"><a href='../../mlr3/html/Task.html#method-Task-help'><code>mlr3::Task$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="levels"><a href='../../mlr3/html/Task.html#method-Task-levels'><code>mlr3::Task$levels()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="missings"><a href='../../mlr3/html/Task.html#method-Task-missings'><code>mlr3::Task$missings()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="rbind"><a href='../../mlr3/html/Task.html#method-Task-rbind'><code>mlr3::Task$rbind()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="rename"><a href='../../mlr3/html/Task.html#method-Task-rename'><code>mlr3::Task$rename()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="select"><a href='../../mlr3/html/Task.html#method-Task-select'><code>mlr3::Task$select()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="set_col_roles"><a href='../../mlr3/html/Task.html#method-Task-set_col_roles'><code>mlr3::Task$set_col_roles()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="set_levels"><a href='../../mlr3/html/Task.html#method-Task-set_levels'><code>mlr3::Task$set_levels()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Task" data-id="set_row_roles"><a href='../../mlr3/html/Task.html#method-Task-set_row_roles'><code>mlr3::Task$set_row_roles()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="TaskRegr" data-id="truth"><a href='../../mlr3/html/TaskRegr.html#method-TaskRegr-truth'><code>mlr3::TaskRegr$truth()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskFcst-new"></a>}}
\if{latex}{\out{\hypertarget{method-TaskFcst-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
The function \code{\link[=as_task_fcst]{as_task_fcst()}} provides an alternative way to construct forecast tasks.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskFcst$new(
  id,
  backend,
  target,
  order,
  key = character(),
  freq = NULL,
  label = NA_character_,
  extra_args = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
Identifier for the new instance.}

\item{\code{backend}}{(\link[mlr3:DataBackend]{mlr3::DataBackend})\cr
Either a \link[mlr3:DataBackend]{mlr3::DataBackend}, or any object which is convertible to a \link[mlr3:DataBackend]{mlr3::DataBackend} with \code{as_data_backend()}.
E.g., a \code{data.frame()} will be converted to a \link[mlr3:DataBackendDataTable]{mlr3::DataBackendDataTable}.}

\item{\code{target}}{(\code{character(1)})\cr
Name of the target column.}

\item{\code{order}}{(\code{character(1)})\cr
Name of the order column.}

\item{\code{key}}{(\code{character(1)})\cr
Name of the key column.}

\item{\code{freq}}{(\code{character(1)} | \code{integer(1)})\cr
Frequency of the time series.
Either a positive number or one of the following:
\itemize{
\item \code{"secondly"}
\item \code{"minutely"}
\item \code{"hourly"}
\item \code{"daily"}
\item \code{"weekly"}
\item \code{"monthly"}
\item \code{"quarterly"}
\item \code{"yearly"}
}}

\item{\code{label}}{(\code{character(1)})\cr
Label for the new instance.}

\item{\code{extra_args}}{(named \code{list()})\cr
Named list of constructor arguments, required for converting task types
via \code{\link[mlr3:convert_task]{mlr3::convert_task()}}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskFcst-data"></a>}}
\if{latex}{\out{\hypertarget{method-TaskFcst-data}{}}}
\subsection{Method \code{data()}}{
Returns a slice of the data from the \link[mlr3:DataBackend]{mlr3::DataBackend} as a \code{data.table}.
Rows default to observations with role \code{"use"}, and
columns default to features with roles \code{"target"}, \code{"order"} or \code{"feature"}.
If \code{rows} or \code{cols} are specified which do not exist in the \link[mlr3:DataBackend]{mlr3::DataBackend},
an exception is raised.

Rows and columns are returned in the order specified via the arguments \code{rows} and \code{cols}.
If \code{rows} is \code{NULL}, rows are returned in the order of \code{task$row_ids}.
If \code{cols} is \code{NULL}, the column order defaults to
\code{c(task$target_names, task$feature_names)}.
Note that it is recommended to \strong{not} rely on the order of columns, and instead always
address columns with their respective column name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskFcst$data(rows = NULL, cols = NULL, ordered = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{rows}}{(positive \code{integer()})\cr
Vector or row indices.}

\item{\code{cols}}{(\code{character()})\cr
Vector of column names.}

\item{\code{ordered}}{(\code{logical(1)})\cr
If \code{TRUE}, data is ordered according to the columns with column role \code{"order"}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Depending on the \link[mlr3:DataBackend]{mlr3::DataBackend}, but usually a \code{\link[data.table:data.table]{data.table::data.table()}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskFcst-print"></a>}}
\if{latex}{\out{\hypertarget{method-TaskFcst-print}{}}}
\subsection{Method \code{print()}}{
Printer.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskFcst$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{(ignored).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskFcst-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TaskFcst-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskFcst$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
